{"version":3,"sources":["components/pages/NotFoundPage/index.js","requests/base.js","utils/errors.js","requests/session.js","requests/user.js","actions/roomActions.js","actions/types.js","actions/socketActions.js","actions/sessionActions.js","HigherOrderComponents/SessionHOC.js","components/pages/SignInPage/index.js","components/common/ErrorMessage/index.js","components/pages/SignUpPage/index.js","components/pages/HomePage/index.js","components/common/UserAvatar/index.js","components/common/MessageForm/index.js","components/common/UserMessage/index.js","components/common/MessagesDisplay/index.js","HigherOrderComponents/RoomHOC.js","components/common/RoomButton/index.js","components/pages/ChatDisplay/index.js","components/common/AuthRoute/index.js","components/common/Fa/index.js","components/common/Loading/index.js","components/App.js","reducers/socketReducer.js","reducers/sessionReducer.js","reducers/roomReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js","components/common/RoomButton/notification.svg"],"names":["NotFoundPage","API_URL","jsonHeaders","Headers","Accept","NetworkError","serverErrors","message","Error","Session","userCredentials","fetch","method","headers","credentials","body","JSON","stringify","then","res","a","status","json","User","newUser","changeRoom","roomName","dispatch","type","payload","removeNotification","addNotification","notification","createSocket","username","socket","io","query","initSocketEvents","on","data","room","displayRoomName","replace","messages","createSession","user","signInUser","signInUserError","destroySession","history","signOut","push","createUser","getCurrentUser","error","errors","SessionHOC","Component","mapDispatchToProps","withRouter","connect","state","session","isLoading","props","onSignIn","onSignUp","onSignOut","close","SignInPage","oldProps","this","id","className","onSubmit","event","preventDefault","formData","FormData","currentTarget","email","get","password","htmlFor","name","map","key","value","ErrorMessage","path","SignUpPage","avatar","passwordConfirmation","placeholder","HomePage","to","UserAvatar","src","alt","MessageForm","date","Date","reset","UserMessage","isCurrentUser","classnames","MessagesDisplay","isAlert","RoomHOC","rooms","currentRoom","notifications","sendMessage","emit","RoomButton","displayNotification","isCurrentRoom","onClick","notificationIcon","ChatDisplay","displayLogout","clickUserIcon","bind","clickNotUserIcon","logout","setState","target","fullCurrentRoom","find","some","AuthRoute","isSignedIn","children","routeProps","defaultProps","Fa","kind","spin","pulse","size","color","style","Loading","exact","initialState","combineReducers","action","roomExists","concat","roomsWithoutRoom","newRooms","includes","newNotifications","middleware","thunk","arr","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","filter","store","createStore","rootReducer","compose","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.e2ede7c6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFoundPage() {\n  return (\n    <main>\n      <h1>404 Not Found</h1>\n    </main>\n  );\n}\n\nexport default NotFoundPage;\n","export const BASE_URL = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3000';\nconst API_PATH = '/api/v1';\n\nexport const API_URL = `${BASE_URL}${API_PATH}`;\n\nexport const jsonHeaders = new Headers({\n  Accept: 'application/json, text/plain, */*',\n  'Content-type': 'application/json',\n});\n","export class NetworkError extends Error {\n  constructor(serverErrors, message) {\n    super(message);\n    this.serverErrors = serverErrors;\n  }\n}\n","import { API_URL, jsonHeaders } from './base';\nimport { NetworkError } from '../utils/errors';\n\nexport const Session = {\n  create(userCredentials) {\n    return fetch(`${API_URL}/session`, {\n      method: 'POST',\n      headers: jsonHeaders,\n      credentials: 'include',\n      body: JSON.stringify(userCredentials),\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n  destroy() {\n    return fetch(`${API_URL}/session`, {\n      method: 'DELETE',\n      credentials: 'include',\n    }).then((res) => res.json());\n  },\n};\n","import { API_URL, jsonHeaders } from './base';\nimport { NetworkError } from '../utils/errors';\n\nexport const User = {\n  getCurrentUser() {\n    return fetch(`${API_URL}/users/current`, {\n      credentials: 'include',\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n  create(newUser) {\n    return fetch(`${API_URL}/users`, {\n      method: 'POST',\n      headers: jsonHeaders,\n      credentials: 'include',\n      body: JSON.stringify(newUser),\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n};\n","import {\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n} from './types';\n\nconst addRoom = (room) => async (dispatch) => {\n  dispatch({ type: ADD_ROOM, payload: room });\n};\n\nconst removeRoom = (room) => async (dispatch) => {\n  dispatch({ type: REMOVE_ROOM, payload: room });\n};\n\nconst changeRoom = (roomName) => async (dispatch) => {\n  dispatch({ type: CHANGE_ROOM, payload: roomName });\n  dispatch(removeNotification(roomName));\n};\n\nconst addMessage = (message) => async (dispatch) => {\n  dispatch({ type: ADD_MESSAGE, payload: message });\n  dispatch(addNotification(message.roomName));\n};\n\nconst addNotification = (notification) => async (dispatch) => {\n  dispatch({ type: ADD_NOTIFICATION, payload: notification });\n};\n\nconst removeNotification = (notification) => async (dispatch) => {\n  dispatch({ type: REMOVE_NOTIFICATION, payload: notification });\n};\n\nexport { addRoom, addMessage, changeRoom, removeRoom, addNotification, removeNotification };\n","const CREATE_SOCKET = 'CREATE_SOCKET';\nconst SIGN_IN = 'SIGN_IN';\nconst SIGN_OUT = 'SIGN_OUT';\nconst SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\nconst LOAD = 'LOAD';\nconst ADD_ROOM = 'ADD_ROOM';\nconst ADD_MESSAGE = 'ADD_MESSAGE';\nconst CHANGE_ROOM = 'CHANGE_ROOM';\nconst REMOVE_ROOM = 'REMOVE_ROOM';\nconst ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nconst REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\n\nexport {\n  CREATE_SOCKET,\n  SIGN_IN,\n  SIGN_OUT,\n  SIGN_IN_FAILURE,\n  LOAD,\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n};\n","import io from 'socket.io-client';\nimport { BASE_URL } from '../requests/base';\nimport { addRoom, addMessage, changeRoom, removeRoom } from './roomActions';\nimport { CREATE_SOCKET } from './types';\n\nconst createSocket = (username) => (dispatch) => {\n  const socket = io(BASE_URL, {\n    query: {\n      username,\n    },\n  });\n  dispatch(initSocketEvents(socket));\n  dispatch({ type: CREATE_SOCKET, payload: socket });\n};\n\nconst initSocketEvents = (socket) => (dispatch) => {\n  socket.on('connect', () => {});\n  socket.on('join room', (data) => {\n    const displayRoomName = data.replace(socket.query.username, '');\n    dispatch(addRoom({ roomName: data, displayRoomName, messages: [] }));\n  });\n  socket.on('leave room', (data) => {\n    dispatch(removeRoom(data));\n  });\n  socket.on('set room', (data) => {\n    dispatch(changeRoom(data));\n  });\n  socket.on('message', (data) => {\n    dispatch(addMessage(data));\n  });\n};\n\nexport { createSocket };\n","import { SIGN_IN, SIGN_OUT, SIGN_IN_FAILURE } from './types';\nimport { Session } from '../requests/session';\nimport { User } from '../requests/user';\nimport { createSocket } from './socketActions';\nimport { resetRooms } from './roomActions';\n\nconst createSession = (userCredentials) => async (dispatch) => {\n  try {\n    const user = await Session.create(userCredentials);\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst destroySession = (history) => (dispatch) =>\n  Session.destroy().then(() => dispatch(signOut(history)));\n\nconst signOut = (history) => (dispatch) => {\n  dispatch({ type: SIGN_OUT });\n  history.push('/');\n};\n\nconst createUser = (newUser) => async (dispatch) => {\n  try {\n    const user = await User.create(newUser);\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch) => {\n  try {\n    const user = await User.getCurrentUser();\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst signInUser = (user) => async (dispatch) => {\n  dispatch({ type: SIGN_IN, payload: user });\n  dispatch(createSocket(user.username));\n};\nconst signInUserError = (error) => async (dispatch) => {\n  dispatch({ type: SIGN_IN_FAILURE, payload: error.serverErrors.errors });\n};\n\nexport { createSession, destroySession, createUser, getCurrentUser };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  createSession,\n  destroySession,\n  createUser,\n  getCurrentUser,\n} from '../actions/sessionActions';\n\nfunction SessionHOC(Component) {\n  const mapStateToProps = (state) => ({\n    user: state.session.user,\n    errors: state.session.errors,\n    isLoading: state.session.isLoading,\n    socket: state.socket.socket,\n  });\n  const mapDispatchToProps = {\n    createSession,\n    destroySession,\n    createUser,\n    getCurrentUser,\n  };\n  return withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps,\n    )((props) => {\n      function signIn(credentials) {\n        return props.createSession(credentials);\n      }\n      function signOut() {\n        props.socket.close();\n        return props.destroySession(props.history);\n      }\n      function signUp(newUser) {\n        return props.createUser(newUser);\n      }\n      function getCurrentUser() {\n        return props.getCurrentUser();\n      }\n      return (\n        <Component\n          {...props}\n          getCurrentUser={getCurrentUser}\n          onSignIn={signIn}\n          onSignUp={signUp}\n          onSignOut={signOut}\n        />\n      );\n    }),\n  );\n}\n\nexport default SessionHOC;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport { withRouterPropTypes } from '../../../PropTypes/withRouterPropTypes';\nimport '../styles.scss';\n\nclass SignInPage extends Component {\n  componentDidUpdate(oldProps) {\n    if (oldProps.user === null && this.props.user && this.props.user.id) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    const { onSignIn, errors } = this.props;\n    function handleSubmit(event) {\n      event.preventDefault();\n      const formData = new FormData(event.currentTarget);\n      const credentials = {\n        email: formData.get('email'),\n        password: formData.get('password'),\n      };\n      onSignIn(credentials);\n    }\n    return (\n      <div className=\"container\">\n        <h1>Sign In</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input className=\"form-item\" type=\"email\" name=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input className=\"form-item\" type=\"password\" name=\"password\" />\n          </div>\n          {!!errors &&\n            errors.map((error) => {\n              if (error.type === 'RecordNotFoundError') {\n                return (\n                  <p className=\"error\" key={error.message}>\n                    {error.message}\n                  </p>\n                );\n              }\n              return null;\n            })}\n          <input className=\"button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nSignInPage.propTypes = {\n  ...withRouterPropTypes(),\n  onSignIn: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SessionHOC(SignInPage));\n","import React from 'react';\n\nfunction ErrorMessage(props) {\n  const { errors, type } = props;\n  if (errors) {\n    return errors.map((error) => {\n      if (error.path === type) {\n        return (\n          <p className=\"error\" key={error.message}>\n            {error.message}\n          </p>\n        );\n      }\n      return null;\n    });\n  }\n  return null;\n}\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport { withRouterPropTypes } from '../../../PropTypes/withRouterPropTypes';\nimport ErrorMessage from '../../common/ErrorMessage';\nimport '../styles.scss';\n\nclass SignUpPage extends Component {\n  componentDidUpdate(oldProps) {\n    if (oldProps.user === null && this.props.user && this.props.user.id) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    const { onSignUp, errors } = this.props;\n    function handleSubmit(event) {\n      event.preventDefault();\n      const formData = new FormData(event.currentTarget);\n      const newUser = {\n        username: formData.get('username'),\n        email: formData.get('email'),\n        avatar: formData.get('avatar'),\n        password: formData.get('password'),\n        passwordConfirmation: formData.get('password-confirmation'),\n      };\n      onSignUp(newUser);\n    }\n    return (\n      <div className=\"container\">\n        <h1>Sign Up</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">\n              <strong>Username</strong>\n            </label>\n            <input className=\"form-item\" type=\"text\" name=\"username\" />\n            <ErrorMessage errors={errors} type=\"username\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">\n              <strong>Email</strong>\n            </label>\n            <input className=\"form-item\" type=\"email\" name=\"email\" />\n            <ErrorMessage errors={errors} type=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"avatar\">\n              <strong>User Avatar</strong>\n            </label>\n            <input\n              className=\"form-item\"\n              type=\"url\"\n              name=\"avatar\"\n              placeholder=\"https://i.kym-cdn.com/entries/icons/original/000/013/564/doge.jpg\"\n            />\n            <ErrorMessage errors={errors} type=\"avatar\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              <strong>Password</strong>\n            </label>\n            <input className=\"form-item\" type=\"password\" name=\"password\" />\n            <ErrorMessage errors={errors} type=\"password\" />\n          </div>\n          <div>\n            <label htmlFor=\"password-confirmation\">\n              <strong>Password Confirmation</strong>\n            </label>\n            <input className=\"form-item\" type=\"password\" name=\"password-confirmation\" />\n            <ErrorMessage errors={errors} type=\"passwordConfirmation\" />\n          </div>\n          <input className=\"button\" type=\"submit\" value=\"Sign Up\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nSignUpPage.propTypes = {\n  ...withRouterPropTypes(),\n  onSignUp: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SessionHOC(SignUpPage));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\n\nclass HomePage extends Component {\n  componentDidMount() {\n    const { user } = this.props;\n    if (user) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    return (\n      <div className=\"home-page\">\n        <div className=\"auth-card justify-center-vertical align-items-center-vertical\">\n          <h1 className=\"title\">Chattr</h1>\n          <Link className=\"max-width\" to=\"sign-in\">\n            <button className=\"button max-width\">Sign in with Existing Account</button>\n          </Link>\n          <Link className=\"max-width\" to=\"/sign-up\">\n            <button className=\"button mt-1 max-width\">Sign Up with New Account</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SessionHOC(HomePage));\n","import React from 'react';\n\nfunction UserAvatar(props) {\n  const { user } = props;\n  return <img className=\"user-avatar\" src={`${user.avatar}`} alt={user.username} />;\n}\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MessageForm(props) {\n  const { onSubmit, roomName } = props;\n  function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const message = {\n      message: formData.get('message'),\n      roomName,\n      date: new Date(),\n    };\n    event.currentTarget.reset();\n    if (!message.message) {\n      return;\n    }\n    onSubmit(message);\n  }\n  return (\n    <div className=\"max-height\">\n      <form className=\"flex max-height\" onSubmit={handleSubmit}>\n        <div className=\"message-text flex justify-center align-items-center\">\n          <textarea className=\"form-item text\" name=\"message\" />\n        </div>\n        <div className=\"message-submit flex justify-center align-items-center\">\n          <input type=\"submit\" className=\"button\" value=\"Send Message\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nMessageForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MessageForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport UserAvatar from '../UserAvatar';\nimport './styles.scss';\n\nfunction UserMessage(props) {\n  const { isCurrentUser, message } = props;\n  return (\n    <div\n      className={classnames('max-height', 'flex', 'user-message', {\n        'current-user-message': isCurrentUser,\n      })}\n    >\n      <div>\n        <div className=\"limit-username\">\n          <strong>{message.user.username}</strong>\n        </div>\n        <div\n          className={classnames('message-content', {\n            'current-user-message-content': isCurrentUser,\n          })}\n        >\n          {message.message}\n        </div>\n      </div>\n      <div className=\"margin-15\">\n        <UserAvatar user={message.user} />\n      </div>\n    </div>\n  );\n}\n\nUserMessage.propTypes = {\n  isCurrentUser: PropTypes.bool.isRequired,\n  message: PropTypes.shape({\n    user: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n    }).isRequired,\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UserMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from '../UserMessage';\nimport './styles.scss';\n\nfunction MessagesDisplay(props) {\n  const { user, messages } = props;\n  return (\n    <div className=\"messages-display max-height flex\">\n      {messages.map((message) => {\n        if (!message.isAlert) {\n          return (\n            <div\n              key={`${message.message} ${message.user.username} ${message.date}`}\n              className=\"message-container\"\n            >\n              <UserMessage\n                message={message}\n                isCurrentUser={user.username === message.user.username}\n              />\n            </div>\n          );\n        }\n        return (\n          <div\n            key={`${message.message} ${message.user.username} ${message.date}`}\n            className=\"message-container flex justify-center align-items-center\"\n          >\n            <div className=\"alert-message\">{message.message}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nMessagesDisplay.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n  }),\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      user: PropTypes.shape({\n        username: PropTypes.string.isRequired,\n        avatar: PropTypes.string.isRequired,\n      }).isRequired,\n      message: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MessagesDisplay;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeRoom } from '../actions/roomActions';\n\nfunction RoomHOC(Component) {\n  const mapStateToProps = (state) => ({\n    rooms: state.rooms.rooms,\n    currentRoom: state.rooms.currentRoom,\n    socket: state.socket.socket,\n    notifications: state.rooms.notifications,\n  });\n  const mapDispatchToProps = {\n    changeRoom,\n  };\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )((props) => {\n    function changeRoom(roomName) {\n      return props.changeRoom(roomName);\n    }\n    function sendMessage(message) {\n      props.socket.emit('message', message);\n    }\n    return <Component {...props} changeRoom={changeRoom} sendMessage={sendMessage} />;\n  });\n}\n\nexport default RoomHOC;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport notificationIcon from './notification.svg';\nimport './styles.scss';\n\nfunction RoomButton(props) {\n  const { room, changeRoom, displayNotification = false, isCurrentRoom } = props;\n  return (\n    <button\n      className={classnames('button', 'max-width', 'flex', 'align-items-center', 'justify-center', {\n        'current-room': isCurrentRoom,\n      })}\n      onClick={() => changeRoom(room.roomName)}\n    >\n      <span className=\"width-80\">\n        {!!room.displayRoomName ? room.displayRoomName : room.roomName}\n      </span>\n      {displayNotification && (\n        <span className=\"red-text flex align-items-center no-width\">\n          <img className=\"notification-icon\" src={notificationIcon} alt=\"Notification Icon\" />\n        </span>\n      )}\n    </button>\n  );\n}\n\nRoomButton.propTypes = {\n  room: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    displayRoomName: PropTypes.string,\n  }).isRequired,\n  changeRoom: PropTypes.func.isRequired,\n  displayNotification: PropTypes.bool,\n};\n\nexport default RoomButton;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport UserAvatar from '../../common/UserAvatar';\nimport MessageForm from '../../common/MessageForm';\nimport MessagesDisplay from '../../common/MessagesDisplay';\nimport RoomHOC from '../../../HigherOrderComponents/RoomHOC';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport RoomButton from '../../common/RoomButton';\nimport './styles.scss';\n\nexport class ChatDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayLogout: false,\n    };\n    this.clickUserIcon = this.clickUserIcon.bind(this);\n    this.clickNotUserIcon = this.clickNotUserIcon.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  clickUserIcon() {\n    const { displayLogout } = this.state;\n    if (displayLogout === false) {\n      this.setState({\n        displayLogout: true,\n      });\n    } else {\n      this.setState({\n        displayLogout: false,\n      });\n    }\n  }\n  clickNotUserIcon(event) {\n    if (event.target.className !== 'user-avatar') {\n      this.setState({\n        displayLogout: false,\n      });\n    }\n  }\n  logout() {\n    const { onSignOut } = this.props;\n    onSignOut();\n  }\n  render() {\n    const { user, sendMessage, currentRoom, changeRoom, rooms, notifications } = this.props;\n    const { displayLogout } = this.state;\n    const fullCurrentRoom = rooms.find((room) => room.roomName === currentRoom);\n    return (\n      <main onClick={this.clickNotUserIcon} className=\"max-height\">\n        <nav className=\"navbar\">\n          <div className=\"user-display justify-center align-items-center\">\n            <h2 className=\"no-padding\">\n              <strong>{user.username}</strong>\n            </h2>\n            <div onClick={this.clickUserIcon} className=\"ml\">\n              <div className=\"user-avatar-container\">\n                <UserAvatar user={user} />\n              </div>\n              {displayLogout && (\n                <div className=\"no-height relative logout-button\">\n                  <div onClick={this.logout} className=\"button\">\n                    Sign Out\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"room-display flex justify-center align-items-center\">\n            {!!fullCurrentRoom ? fullCurrentRoom.displayRoomName : currentRoom}\n          </div>\n        </nav>\n        <div className=\"flex max-height-no-nav\">\n          <div className=\"rooms-nav flex align-items-center\">\n            <h2 className=\"chat-title\">Chat Rooms</h2>\n            <hr className=\"line-break\" />\n            <div className=\"width-80 height-80 rooms\">\n              {rooms.map((room) => {\n                return (\n                  <RoomButton\n                    key={room.roomName}\n                    isCurrentRoom={room.roomName === currentRoom}\n                    displayNotification={notifications.some(\n                      (notification) => notification === room.roomName,\n                    )}\n                    changeRoom={changeRoom}\n                    room={room}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"chat\">\n            <div className=\"message-box\">\n              {!!fullCurrentRoom && (\n                <MessagesDisplay user={user} messages={fullCurrentRoom.messages} />\n              )}\n            </div>\n            <div className=\"chat-form\">\n              <MessageForm onSubmit={sendMessage} roomName={currentRoom} />\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(SessionHOC(RoomHOC(ChatDisplay)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction AuthRoute(props) {\n  const { isSignedIn, children, ...routeProps } = props;\n  return <Route {...routeProps}>{isSignedIn ? children : <Redirect to=\"/\" />}</Route>;\n}\n\nAuthRoute.propTypes = {\n  isSignedIn: PropTypes.bool,\n};\n\nAuthRoute.defaultProps = {\n  isSignedIn: false,\n};\n\nexport default AuthRoute;\n","import React from 'react';\nimport classnames from 'classnames';\n\nfunction Fa(props) {\n  const { kind, spin = false, pulse = false, size = false, color = 'black' } = props;\n  return (\n    <i\n      style={{ color: color }}\n      className={classnames(`fa fa-${kind}`, {\n        'fa-spin': spin,\n        [`fa-${size}`]: size,\n        'fa-pulse': pulse,\n      })}\n    ></i>\n  );\n}\n\nexport default Fa;\n","import React from 'react';\nimport Fa from '../Fa';\n\nfunction Loading() {\n  return (\n    <div className=\"loading\">\n      <Fa kind=\"spinner\" size=\"5x\" pulse={true} />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { NotFoundPage, SignInPage, SignUpPage, HomePage, ChatDisplay } from './pages';\nimport AuthRoute from './common/AuthRoute';\nimport Loading from './common/Loading';\nimport SessionHOC from '../HigherOrderComponents/SessionHOC';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { getCurrentUser } = this.props;\n    getCurrentUser();\n  }\n  render() {\n    const { user, isLoading } = this.props;\n    if (isLoading) {\n      return <Loading />;\n    }\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/sign-in\">\n          <SignInPage />\n        </Route>\n        <Route exact path=\"/sign-up\">\n          <SignUpPage />\n        </Route>\n        <AuthRoute isSignedIn={!!user && !!user.id} path=\"/chat\">\n          <ChatDisplay user={user} />\n        </AuthRoute>\n        <Route path=\"*\">\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default SessionHOC(App);\n","import { CREATE_SOCKET, SIGN_OUT } from '../actions/types';\n\nconst initialState = {\n  socket: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_SOCKET:\n      return {\n        ...state,\n        socket: action.payload,\n      };\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { SIGN_IN, SIGN_OUT, SIGN_IN_FAILURE, LOAD } from '../actions/types';\n\nconst initialState = {\n  user: null,\n  errors: null,\n  isLoading: true,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        user: action.payload,\n        errors: null,\n        isLoading: false,\n      };\n    case SIGN_OUT:\n      return { ...initialState, isLoading: false };\n    case SIGN_IN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        errors: action.payload,\n        isLoading: false,\n      };\n    case LOAD:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  SIGN_OUT,\n} from '../actions/types';\n\nconst initialState = {\n  rooms: [],\n  currentRoom: null,\n  notifications: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_ROOM:\n      const roomExists = !!state.rooms.find((room) => action.payload.roomName === room.roomName);\n      if (roomExists) {\n        return state;\n      }\n      return {\n        ...state,\n        rooms: state.rooms.concat([action.payload]),\n      };\n    case REMOVE_ROOM:\n      const roomsWithoutRoom = state.rooms.map((room) => {\n        if (room.roomName !== action.payload.roomName) {\n          return room;\n        }\n        return null;\n      });\n      return {\n        ...state,\n        rooms: roomsWithoutRoom,\n      };\n    case CHANGE_ROOM:\n      return {\n        ...state,\n        currentRoom: action.payload,\n      };\n    case ADD_MESSAGE:\n      const newRooms = state.rooms.map((room) => {\n        if (room.roomName === action.payload.roomName) {\n          room.messages = [action.payload].concat(room.messages);\n        }\n        return room;\n      });\n      return {\n        ...state,\n        rooms: newRooms,\n      };\n    case ADD_NOTIFICATION:\n      if (state.notifications.includes(action.payload) || state.currentRoom === action.payload) {\n        return state;\n      }\n      return {\n        ...state,\n        notifications: state.notifications.concat([action.payload]),\n      };\n    case REMOVE_NOTIFICATION:\n      const newNotifications = state.notifications.map((notification) => {\n        if (notification !== action.payload) {\n          return notification;\n        }\n        return null;\n      });\n      return {\n        ...state,\n        notifications: newNotifications,\n      };\n    case SIGN_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport socketReducer from './socketReducer';\nimport sessionReducer from './sessionReducer';\nimport roomReducer from './roomReducer';\n\nexport default combineReducers({\n  socket: socketReducer,\n  session: sessionReducer,\n  rooms: roomReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk]; // allows async actions\n\nconst arr = [\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n].filter((a) => a);\n\nconst store = createStore(rootReducer, initialState, compose(...arr));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/notification.8722f396.svg\";"],"sourceRoot":""}