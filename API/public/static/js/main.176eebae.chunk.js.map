{"version":3,"sources":["components/pages/NotFoundPage/index.js","requests/base.js","utils/errors.js","requests/session.js","requests/user.js","actions/roomActions.js","actions/types.js","actions/socketActions.js","actions/sessionActions.js","HigherOrderComponents/SessionHOC.js","components/pages/SignInPage/index.js","components/common/ErrorMessage/index.js","components/pages/SignUpPage/index.js","components/pages/HomePage/index.js","components/common/UserAvatar/index.js","components/common/MessageForm/index.js","components/common/UserMessage/index.js","components/common/MessagesDisplay/index.js","HigherOrderComponents/RoomHOC.js","components/common/RoomButton/index.js","components/pages/ChatDisplay/index.js","components/common/AuthRoute/index.js","components/common/Fa/index.js","components/common/Loading/index.js","components/App.js","reducers/socketReducer.js","reducers/sessionReducer.js","reducers/roomReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js","components/common/RoomButton/notification.gif"],"names":["NotFoundPage","API_URL","jsonHeaders","Headers","Accept","NetworkError","serverErrors","message","Error","Session","userCredentials","fetch","method","headers","credentials","body","JSON","stringify","then","res","a","status","json","User","newUser","changeRoom","roomName","dispatch","type","payload","removeNotification","addNotification","notification","createSocket","username","socket","io","query","initSocketEvents","on","data","room","displayRoomName","replace","messages","createSession","user","signInUser","signInUserError","destroySession","createUser","getCurrentUser","error","errors","SessionHOC","Component","mapDispatchToProps","connect","state","session","isLoading","props","onSignIn","onSignUp","onSignOut","close","SignInPage","oldProps","this","id","history","push","className","onSubmit","event","preventDefault","formData","FormData","currentTarget","email","get","password","htmlFor","name","map","key","value","withRouter","ErrorMessage","path","SignUpPage","avatar","passwordConfirmation","placeholder","HomePage","to","UserAvatar","src","alt","MessageForm","date","Date","reset","UserMessage","isCurrentUser","classnames","MessagesDisplay","isAlert","RoomHOC","rooms","currentRoom","notifications","sendMessage","emit","RoomButton","displayNotification","isCurrentRoom","onClick","notificationIcon","ChatDisplay","displayLogout","clickUserIcon","bind","clickNotUserIcon","logout","setState","target","disconnect","fullCurrentRoom","find","some","AuthRoute","isSignedIn","children","routeProps","defaultProps","Fa","kind","spin","pulse","size","color","style","Loading","exact","initialState","combineReducers","action","roomExists","concat","roomsWithoutRoom","newRooms","includes","newNotifications","middleware","thunk","arr","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","filter","store","createStore","rootReducer","compose","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.176eebae.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFoundPage() {\n  return (\n    <main>\n      <h1>404 Not Found</h1>\n    </main>\n  );\n}\n\nexport default NotFoundPage;\n","export const BASE_URL = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3000';\nconst API_PATH = '/api/v1';\n\nexport const API_URL = `${BASE_URL}${API_PATH}`;\n\nexport const jsonHeaders = new Headers({\n  Accept: 'application/json, text/plain, */*',\n  'Content-type': 'application/json',\n});\n","export class NetworkError extends Error {\n  constructor(serverErrors, message) {\n    super(message);\n    this.serverErrors = serverErrors;\n  }\n}\n","import { API_URL, jsonHeaders } from './base';\nimport { NetworkError } from '../utils/errors';\n\nexport const Session = {\n  create(userCredentials) {\n    return fetch(`${API_URL}/session`, {\n      method: 'POST',\n      headers: jsonHeaders,\n      credentials: 'include',\n      body: JSON.stringify(userCredentials),\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n  destroy() {\n    return fetch(`${API_URL}/session`, {\n      method: 'DELETE',\n      credentials: 'include',\n    }).then((res) => res.json());\n  },\n};\n","import { API_URL, jsonHeaders } from './base';\nimport { NetworkError } from '../utils/errors';\n\nexport const User = {\n  getCurrentUser() {\n    return fetch(`${API_URL}/users/current`, {\n      credentials: 'include',\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n  create(newUser) {\n    return fetch(`${API_URL}/users`, {\n      method: 'POST',\n      headers: jsonHeaders,\n      credentials: 'include',\n      body: JSON.stringify(newUser),\n    }).then(async (res) => {\n      if (res.status !== 200) {\n        throw new NetworkError(await res.json());\n      }\n      return res.json();\n    });\n  },\n};\n","import {\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  RESET_ROOMS,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n} from './types';\n\nconst addRoom = (room) => async (dispatch) => {\n  dispatch({ type: ADD_ROOM, payload: room });\n};\n\nconst removeRoom = (room) => async (dispatch) => {\n  dispatch({ type: REMOVE_ROOM, payload: room });\n};\n\nconst resetRooms = () => async (dispatch) => {\n  dispatch({ type: RESET_ROOMS });\n};\n\nconst changeRoom = (roomName) => async (dispatch) => {\n  dispatch({ type: CHANGE_ROOM, payload: roomName });\n  dispatch(removeNotification(roomName));\n};\n\nconst addMessage = (message) => async (dispatch) => {\n  dispatch({ type: ADD_MESSAGE, payload: message });\n  dispatch(addNotification(message.roomName));\n};\n\nconst addNotification = (notification) => async (dispatch) => {\n  dispatch({ type: ADD_NOTIFICATION, payload: notification });\n};\n\nconst removeNotification = (notification) => async (dispatch) => {\n  dispatch({ type: REMOVE_NOTIFICATION, payload: notification });\n};\n\nexport {\n  addRoom,\n  addMessage,\n  changeRoom,\n  removeRoom,\n  resetRooms,\n  addNotification,\n  removeNotification,\n};\n","const CREATE_SOCKET = 'CREATE_SOCKET';\nconst DESTROY_SOCKET = 'DESTROY_SOCKET';\nconst SIGN_IN = 'SIGN_IN';\nconst SIGN_OUT = 'SIGN_OUT';\nconst SIGN_IN_FAILURE = 'SIGN_IN_FAILURE';\nconst LOAD = 'LOAD';\nconst ADD_ROOM = 'ADD_ROOM';\nconst ADD_MESSAGE = 'ADD_MESSAGE';\nconst CHANGE_ROOM = 'CHANGE_ROOM';\nconst REMOVE_ROOM = 'REMOVE_ROOM';\nconst RESET_ROOMS = 'RESET_ROOMS';\nconst ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nconst REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION';\n\nexport {\n  CREATE_SOCKET,\n  DESTROY_SOCKET,\n  SIGN_IN,\n  SIGN_OUT,\n  SIGN_IN_FAILURE,\n  LOAD,\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  RESET_ROOMS,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n};\n","import io from 'socket.io-client';\nimport { BASE_URL } from '../requests/base';\nimport { addRoom, addMessage, changeRoom, removeRoom } from './roomActions';\nimport { CREATE_SOCKET } from './types';\n\nconst createSocket = (username) => (dispatch) => {\n  const socket = io(BASE_URL, {\n    query: {\n      username,\n    },\n  });\n  dispatch(initSocketEvents(socket));\n  dispatch({ type: CREATE_SOCKET, payload: socket });\n};\n\nconst initSocketEvents = (socket) => (dispatch) => {\n  socket.on('connect', () => {});\n  socket.on('join room', (data) => {\n    const displayRoomName = data.replace(socket.query.username, '');\n    dispatch(addRoom({ roomName: data, displayRoomName, messages: [] }));\n  });\n  socket.on('leave room', (data) => {\n    dispatch(removeRoom(data));\n  });\n  socket.on('set room', (data) => {\n    dispatch(changeRoom(data));\n  });\n  socket.on('message', (data) => {\n    dispatch(addMessage(data));\n  });\n};\n\nexport { createSocket };\n","import { SIGN_IN, SIGN_OUT, SIGN_IN_FAILURE } from './types';\nimport { Session } from '../requests/session';\nimport { User } from '../requests/user';\nimport { createSocket } from './socketActions';\nimport { resetRooms } from './roomActions';\n\nconst createSession = (userCredentials) => async (dispatch) => {\n  try {\n    const user = await Session.create(userCredentials);\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst destroySession = () => (dispatch) =>\n  Session.destroy().then(() =>\n    dispatch({ type: SIGN_OUT }).then(() => {\n      dispatch(resetRooms());\n    }),\n  );\n\nconst createUser = (newUser) => async (dispatch) => {\n  try {\n    const user = await User.create(newUser);\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch) => {\n  try {\n    const user = await User.getCurrentUser();\n    dispatch(signInUser(user));\n  } catch (error) {\n    dispatch(signInUserError(error));\n  }\n};\n\nconst signInUser = (user) => async (dispatch) => {\n  dispatch({ type: SIGN_IN, payload: user });\n  dispatch(createSocket(user.username));\n};\nconst signInUserError = (error) => async (dispatch) => {\n  dispatch({ type: SIGN_IN_FAILURE, payload: error.serverErrors.errors });\n};\n\nexport { createSession, destroySession, createUser, getCurrentUser };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  createSession,\n  destroySession,\n  createUser,\n  getCurrentUser,\n} from '../actions/sessionActions';\n\nfunction SessionHOC(Component) {\n  const mapStateToProps = (state) => ({\n    user: state.session.user,\n    errors: state.session.errors,\n    isLoading: state.session.isLoading,\n    socket: state.socket.socket,\n  });\n  const mapDispatchToProps = {\n    createSession,\n    destroySession,\n    createUser,\n    getCurrentUser,\n  };\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )((props) => {\n    function signIn(credentials) {\n      return props.createSession(credentials);\n    }\n    function signOut() {\n      props.socket.close();\n      return props.destroySession();\n    }\n    function signUp(newUser) {\n      return props.createUser(newUser);\n    }\n    function getCurrentUser() {\n      return props.getCurrentUser();\n    }\n    return (\n      <Component\n        {...props}\n        getCurrentUser={getCurrentUser}\n        onSignIn={signIn}\n        onSignUp={signUp}\n        onSignOut={signOut}\n      />\n    );\n  });\n}\n\nexport default SessionHOC;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport { withRouterPropTypes } from '../../../PropTypes/withRouterPropTypes';\nimport '../styles.scss';\n\nclass SignInPage extends Component {\n  componentDidUpdate(oldProps) {\n    if (oldProps.user === null && this.props.user && this.props.user.id) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    const { onSignIn, errors } = this.props;\n    function handleSubmit(event) {\n      event.preventDefault();\n      const formData = new FormData(event.currentTarget);\n      const credentials = {\n        email: formData.get('email'),\n        password: formData.get('password'),\n      };\n      onSignIn(credentials);\n    }\n    return (\n      <div className=\"container\">\n        <h1>Sign In</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input className=\"form-item\" type=\"email\" name=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input className=\"form-item\" type=\"password\" name=\"password\" />\n          </div>\n          {!!errors &&\n            errors.map((error) => {\n              if (error.type === 'RecordNotFoundError') {\n                return (\n                  <p className=\"error\" key={error.message}>\n                    {error.message}\n                  </p>\n                );\n              }\n              return null;\n            })}\n          <input className=\"button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nSignInPage.propTypes = {\n  ...withRouterPropTypes(),\n  onSignIn: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SessionHOC(SignInPage));\n","import React from 'react';\n\nfunction ErrorMessage(props) {\n  const { errors, type } = props;\n  if (errors) {\n    return errors.map((error) => {\n      if (error.path === type) {\n        return (\n          <p className=\"error\" key={error.message}>\n            {error.message}\n          </p>\n        );\n      }\n      return null;\n    });\n  }\n  return null;\n}\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport { withRouterPropTypes } from '../../../PropTypes/withRouterPropTypes';\nimport ErrorMessage from '../../common/ErrorMessage';\nimport '../styles.scss';\n\nclass SignUpPage extends Component {\n  componentDidUpdate(oldProps) {\n    if (oldProps.user === null && this.props.user && this.props.user.id) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    const { onSignUp, errors } = this.props;\n    function handleSubmit(event) {\n      event.preventDefault();\n      const formData = new FormData(event.currentTarget);\n      const newUser = {\n        username: formData.get('username'),\n        email: formData.get('email'),\n        avatar: formData.get('avatar'),\n        password: formData.get('password'),\n        passwordConfirmation: formData.get('password-confirmation'),\n      };\n      onSignUp(newUser);\n    }\n    return (\n      <div className=\"container\">\n        <h1>Sign Up</h1>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">\n              <strong>Username</strong>\n            </label>\n            <input className=\"form-item\" type=\"text\" name=\"username\" />\n            <ErrorMessage errors={errors} type=\"username\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">\n              <strong>Email</strong>\n            </label>\n            <input className=\"form-item\" type=\"email\" name=\"email\" />\n            <ErrorMessage errors={errors} type=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"avatar\">\n              <strong>User Avatar</strong>\n            </label>\n            <input\n              className=\"form-item\"\n              type=\"url\"\n              name=\"avatar\"\n              placeholder=\"https://i.kym-cdn.com/entries/icons/original/000/013/564/doge.jpg\"\n            />\n            <ErrorMessage errors={errors} type=\"avatar\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              <strong>Password</strong>\n            </label>\n            <input className=\"form-item\" type=\"password\" name=\"password\" />\n            <ErrorMessage errors={errors} type=\"password\" />\n          </div>\n          <div>\n            <label htmlFor=\"password-confirmation\">\n              <strong>Password Confirmation</strong>\n            </label>\n            <input className=\"form-item\" type=\"password\" name=\"password-confirmation\" />\n            <ErrorMessage errors={errors} type=\"passwordConfirmation\" />\n          </div>\n          <input className=\"button\" type=\"submit\" value=\"Sign Up\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nSignUpPage.propTypes = {\n  ...withRouterPropTypes(),\n  onSignUp: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SessionHOC(SignUpPage));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\n\nclass HomePage extends Component {\n  componentDidMount() {\n    const { user } = this.props;\n    if (user) {\n      this.props.history.push('/chat');\n    }\n  }\n  render() {\n    return (\n      <div className=\"home-page\">\n        <div className=\"auth-card justify-center-vertical align-items-center-vertical\">\n          <h1 className=\"title\">Chattr</h1>\n          <Link className=\"max-width\" to=\"sign-in\">\n            <button className=\"button max-width\">Sign in with Existing Account</button>\n          </Link>\n          <Link className=\"max-width\" to=\"/sign-up\">\n            <button className=\"button mt-1 max-width\">Sign Up with New Account</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SessionHOC(HomePage));\n","import React from 'react';\n\nfunction UserAvatar(props) {\n  const { user } = props;\n  return <img className=\"user-avatar\" src={`${user.avatar}`} alt={user.username} />;\n}\n\nexport default UserAvatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MessageForm(props) {\n  const { onSubmit, roomName } = props;\n  function handleSubmit(event) {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const message = {\n      message: formData.get('message'),\n      roomName,\n      date: new Date(),\n    };\n    event.currentTarget.reset();\n    onSubmit(message);\n  }\n  return (\n    <div className=\"max-height\">\n      <form className=\"flex max-height\" onSubmit={handleSubmit}>\n        <div className=\"message-text flex justify-center align-items-center\">\n          <textarea className=\"form-item text\" name=\"message\" />\n        </div>\n        <div className=\"message-submit flex justify-center align-items-center\">\n          <input type=\"submit\" className=\"button\" value=\"Send Message\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nMessageForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MessageForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport UserAvatar from '../UserAvatar';\nimport './styles.scss';\n\nfunction UserMessage(props) {\n  const { isCurrentUser, message } = props;\n  return (\n    <div\n      className={classnames('max-height', 'flex', 'user-message', {\n        'current-user-message': isCurrentUser,\n      })}\n    >\n      <div>\n        <div className=\"limit-username\">\n          <strong>{message.user.username}</strong>\n        </div>\n        <div\n          className={classnames('message-content', {\n            'current-user-message-content': isCurrentUser,\n          })}\n        >\n          {message.message}\n        </div>\n      </div>\n      <div className=\"margin-15\">\n        <UserAvatar user={message.user} />\n      </div>\n    </div>\n  );\n}\n\nUserMessage.propTypes = {\n  isCurrentUser: PropTypes.bool.isRequired,\n  message: PropTypes.shape({\n    user: PropTypes.shape({\n      username: PropTypes.string.isRequired,\n      avatar: PropTypes.string.isRequired,\n    }).isRequired,\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default UserMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserMessage from '../UserMessage';\nimport './styles.scss';\n\nfunction MessagesDisplay(props) {\n  const { user, messages } = props;\n  return (\n    <div className=\"messages-display max-height flex\">\n      {messages.map((message) => {\n        if (!message.isAlert) {\n          return (\n            <div\n              key={`${message.message} ${message.user.username} ${message.date}`}\n              className=\"message-container\"\n            >\n              <UserMessage\n                message={message}\n                isCurrentUser={user.username === message.user.username}\n              />\n            </div>\n          );\n        }\n        return (\n          <div\n            key={`${message.message} ${message.user.username} ${message.date}`}\n            className=\"message-container flex justify-center align-items-center\"\n          >\n            <div className=\"alert-message\">{message.message}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nMessagesDisplay.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n  }),\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      user: PropTypes.shape({\n        username: PropTypes.string.isRequired,\n        avatar: PropTypes.string.isRequired,\n      }).isRequired,\n      message: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MessagesDisplay;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeRoom } from '../actions/roomActions';\n\nfunction RoomHOC(Component) {\n  const mapStateToProps = (state) => ({\n    rooms: state.rooms.rooms,\n    currentRoom: state.rooms.currentRoom,\n    socket: state.socket.socket,\n    notifications: state.rooms.notifications,\n  });\n  const mapDispatchToProps = {\n    changeRoom,\n  };\n  return connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )((props) => {\n    function changeRoom(roomName) {\n      return props.changeRoom(roomName);\n    }\n    function sendMessage(message) {\n      props.socket.emit('message', message);\n    }\n    return <Component {...props} changeRoom={changeRoom} sendMessage={sendMessage} />;\n  });\n}\n\nexport default RoomHOC;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport notificationIcon from './notification.gif';\nimport './styles.scss';\n\nfunction RoomButton(props) {\n  const { room, changeRoom, displayNotification = false, isCurrentRoom } = props;\n  return (\n    <button\n      className={classnames('button', 'max-width', 'flex', 'align-items-center', 'justify-center', {\n        'current-room': isCurrentRoom,\n      })}\n      onClick={() => changeRoom(room.roomName)}\n    >\n      <span className=\"width-80\">\n        {!!room.displayRoomName ? room.displayRoomName : room.roomName}\n      </span>\n      {displayNotification && (\n        <span className=\"red-text flex align-items-center no-width\">\n          <img className=\"notification-icon\" src={notificationIcon} alt=\"Notification Icon\" />\n        </span>\n      )}\n    </button>\n  );\n}\n\nRoomButton.propTypes = {\n  room: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    displayRoomName: PropTypes.string,\n  }).isRequired,\n  changeRoom: PropTypes.func.isRequired,\n  displayNotification: PropTypes.bool,\n};\n\nexport default RoomButton;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport UserAvatar from '../../common/UserAvatar';\nimport MessageForm from '../../common/MessageForm';\nimport MessagesDisplay from '../../common/MessagesDisplay';\nimport RoomHOC from '../../../HigherOrderComponents/RoomHOC';\nimport SessionHOC from '../../../HigherOrderComponents/SessionHOC';\nimport RoomButton from '../../common/RoomButton';\nimport './styles.scss';\n\nexport class ChatDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayLogout: false,\n    };\n    this.clickUserIcon = this.clickUserIcon.bind(this);\n    this.clickNotUserIcon = this.clickNotUserIcon.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  clickUserIcon() {\n    const { displayLogout } = this.state;\n    if (displayLogout === false) {\n      this.setState({\n        displayLogout: true,\n      });\n    } else {\n      this.setState({\n        displayLogout: false,\n      });\n    }\n  }\n  clickNotUserIcon(event) {\n    if (event.target.className !== 'user-avatar') {\n      this.setState({\n        displayLogout: false,\n      });\n    }\n  }\n  logout() {\n    const { onSignOut, socket } = this.props;\n    onSignOut();\n    socket.disconnect();\n    this.props.history.push('/');\n  }\n  render() {\n    const { user, sendMessage, currentRoom, changeRoom, rooms, notifications } = this.props;\n    const { displayLogout } = this.state;\n    const fullCurrentRoom = rooms.find((room) => room.roomName === currentRoom);\n    return (\n      <main onClick={this.clickNotUserIcon} className=\"max-height\">\n        <nav className=\"navbar\">\n          <div className=\"user-display justify-center align-items-center\">\n            <h2 className=\"no-padding\">\n              <strong>{user.username}</strong>\n            </h2>\n            <div onClick={this.clickUserIcon} className=\"ml\">\n              <div className=\"user-avatar-container\">\n                <UserAvatar user={user} />\n              </div>\n              {displayLogout && (\n                <div className=\"no-height relative logout-button\">\n                  <div onClick={this.logout} className=\"button\">\n                    Sign Out\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"room-display flex justify-center align-items-center\">\n            {!!fullCurrentRoom ? fullCurrentRoom.displayRoomName : currentRoom}\n          </div>\n        </nav>\n        <div className=\"flex max-height-no-nav\">\n          <div className=\"rooms-nav flex align-items-center\">\n            <h2 className=\"chat-title\">Chat Rooms</h2>\n            <hr className=\"line-break\" />\n            <div className=\"width-80 height-80 rooms\">\n              {rooms.map((room) => {\n                return (\n                  <RoomButton\n                    key={room.roomName}\n                    isCurrentRoom={room.roomName === currentRoom}\n                    displayNotification={notifications.some(\n                      (notification) => notification === room.roomName,\n                    )}\n                    changeRoom={changeRoom}\n                    room={room}\n                  />\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"chat\">\n            <div className=\"message-box\">\n              {!!fullCurrentRoom && (\n                <MessagesDisplay user={user} messages={fullCurrentRoom.messages} />\n              )}\n            </div>\n            <div className=\"chat-form\">\n              <MessageForm onSubmit={sendMessage} roomName={currentRoom} />\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(SessionHOC(RoomHOC(ChatDisplay)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction AuthRoute(props) {\n  const { isSignedIn, children, ...routeProps } = props;\n  return <Route {...routeProps}>{isSignedIn ? children : <Redirect to=\"/\" />}</Route>;\n}\n\nAuthRoute.propTypes = {\n  isSignedIn: PropTypes.bool,\n};\n\nAuthRoute.defaultProps = {\n  isSignedIn: false,\n};\n\nexport default AuthRoute;\n","import React from 'react';\nimport classnames from 'classnames';\n\nfunction Fa(props) {\n  const { kind, spin = false, pulse = false, size = false, color = 'black' } = props;\n  return (\n    <i\n      style={{ color: color }}\n      className={classnames(`fa fa-${kind}`, {\n        'fa-spin': spin,\n        [`fa-${size}`]: size,\n        'fa-pulse': pulse,\n      })}\n    ></i>\n  );\n}\n\nexport default Fa;\n","import React from 'react';\nimport Fa from '../Fa';\n\nfunction Loading() {\n  return (\n    <div className=\"loading\">\n      <Fa kind=\"spinner\" size=\"5x\" pulse={true} />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { NotFoundPage, SignInPage, SignUpPage, HomePage, ChatDisplay } from './pages';\nimport AuthRoute from './common/AuthRoute';\nimport Loading from './common/Loading';\nimport SessionHOC from '../HigherOrderComponents/SessionHOC';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    const { getCurrentUser } = this.props;\n    getCurrentUser();\n  }\n  render() {\n    const { user, isLoading } = this.props;\n    if (isLoading) {\n      return <Loading />;\n    }\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route exact path=\"/sign-in\">\n            <SignInPage />\n          </Route>\n          <Route exact path=\"/sign-up\">\n            <SignUpPage />\n          </Route>\n          <AuthRoute isSignedIn={!!user && !!user.id} path=\"/chat\">\n            <ChatDisplay user={user} />\n          </AuthRoute>\n          <Route path=\"*\">\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default SessionHOC(App);\n","import { CREATE_SOCKET, DESTROY_SOCKET } from '../actions/types';\n\nconst initialState = {\n  socket: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_SOCKET:\n      return {\n        ...state,\n        socket: action.payload,\n      };\n    case DESTROY_SOCKET:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { SIGN_IN, SIGN_OUT, SIGN_IN_FAILURE, LOAD } from '../actions/types';\n\nconst initialState = {\n  user: null,\n  errors: null,\n  isLoading: true,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        user: action.payload,\n        errors: null,\n        isLoading: false,\n      };\n    case SIGN_OUT:\n      return {\n        ...state,\n        user: null,\n        errors: null,\n        isLoading: false,\n      };\n    case SIGN_IN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        errors: action.payload,\n        isLoading: false,\n      };\n    case LOAD:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_ROOM,\n  ADD_MESSAGE,\n  CHANGE_ROOM,\n  REMOVE_ROOM,\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  RESET_ROOMS,\n} from '../actions/types';\n\nconst initialState = {\n  rooms: [],\n  currentRoom: null,\n  notifications: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_ROOM:\n      const roomExists = !!state.rooms.find((room) => action.payload.roomName === room.roomName);\n      if (roomExists) {\n        return state;\n      }\n      return {\n        ...state,\n        rooms: state.rooms.concat([action.payload]),\n      };\n    case REMOVE_ROOM:\n      const roomsWithoutRoom = state.rooms.map((room) => {\n        if (room.roomName !== action.payload.roomName) {\n          return room;\n        }\n        return null;\n      });\n      return {\n        ...state,\n        rooms: roomsWithoutRoom,\n      };\n    case CHANGE_ROOM:\n      return {\n        ...state,\n        currentRoom: action.payload,\n      };\n    case ADD_MESSAGE:\n      const newRooms = state.rooms.map((room) => {\n        if (room.roomName === action.payload.roomName) {\n          room.messages = [action.payload].concat(room.messages);\n        }\n        return room;\n      });\n      return {\n        ...state,\n        rooms: newRooms,\n      };\n    case ADD_NOTIFICATION:\n      if (state.notifications.includes(action.payload) || state.currentRoom === action.payload) {\n        return state;\n      }\n      return {\n        ...state,\n        notifications: state.notifications.concat([action.payload]),\n      };\n    case REMOVE_NOTIFICATION:\n      const newNotifications = state.notifications.map((notification) => {\n        if (notification !== action.payload) {\n          return notification;\n        }\n        return null;\n      });\n      return {\n        ...state,\n        notifications: newNotifications,\n      };\n    case RESET_ROOMS:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport socketReducer from './socketReducer';\nimport sessionReducer from './sessionReducer';\nimport roomReducer from './roomReducer';\n\nexport default combineReducers({\n  socket: socketReducer,\n  session: sessionReducer,\n  rooms: roomReducer,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk]; // allows async actions\n\nconst arr = [\n  applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n].filter((a) => a);\n\nconst store = createStore(rootReducer, initialState, compose(...arr));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/notification.6035f527.gif\";"],"sourceRoot":""}